1 Introduction

Fast Fourier Transform (FFT) converts a time‑domain signal into its frequency‑domain representation in O(N log N) time. This note reviews core ideas and walks through two sensor‑driven use‑cases.

flowchart TD
    a[Time‑domain signal] -->|FFT| b[Frequency‑domain spectrum]
    b --> c{Down‑stream tasks}
    c --> d[Filtering / Denoising]
    c --> e[Feature Extraction]
    c --> f[Anomaly Detection]

2 Core Concepts

Concept

TL;DR

Key Formula

Discrete Fourier Transform

Represents a finite signal as weighted complex exponentials.

X_k = Σ_{n=0}^{N‑1} x_n · e^{-j 2π k n / N}

Fast Fourier Transform

Lowers complexity from O(N²) to O(N log N) (Cooley–Tukey).

Divide‑and‑conquer

Windowing

Mitigates spectral leakage for finite segments.

Hamming, Hann, Blackman

3 Applied Examples

3‑1 Thin‑Film Object Recognition

Kim et al., 2024 – Sensors & Actuators A

Two‑legged piezo transducer excites the film; paired sensor measures vibration.

Sweep signal → FFT → resonance peaks as features.

LSTM classifier reaches F1 ≈ 0.92 on five film classes.

3‑2 Lower‑Limb Wearable Robot Gait Analysis

Paper

Year

FFT Role

Active control strategy of lower limb exoskeleton based on variable admittance parameters

2024

Detects dominant gait frequency → adaptive admittance scheduling

Adaptive framework of real‑time continuous gait phase variable estimation

2021

Continuous FFT tracks stride frequency for phase estimation

4 Minimal NumPy Demo

import numpy as np, matplotlib.pyplot as plt
fs = 1000                 # Hz (sampling rate)
T  = 1.0                  # seconds of data
f1, f2 = 50, 120          # signal frequencies [Hz]

n   = np.arange(int(fs*T))
sig = np.sin(2*np.pi*f1*n/fs) + 0.5*np.sin(2*np.pi*f2*n/fs)

X     = np.fft.rfft(sig)
freqs = np.fft.rfftfreq(len(sig), 1/fs)

plt.plot(freqs, np.abs(X))
plt.xlabel('Frequency [Hz]')
plt.ylabel('|X(f)|')
plt.title('FFT magnitude spectrum')
plt.show()

5 References

Thin film object recognition system using a two‑legged piezoelectric actuator‑sensor pair with machine learning. Sensors & Actuators A (2024).

Active control strategy of lower limb exoskeleton based on variable admittance parameters. Robotics & Autonomous Systems (2024).

Adaptive framework of real‑time continuous gait phase variable estimation for lower‑limb wearable robots. Robotics & Autonomous Systems (2021).

Smith, S. W. Scientist & Engineer's Guide to DSP.

⬅ Back to Overview
